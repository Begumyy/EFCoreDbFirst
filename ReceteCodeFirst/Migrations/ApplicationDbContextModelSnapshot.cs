// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReceteCodeFirst.Data;

#nullable disable

namespace ReceteCodeFirst.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IlacRecete", b =>
                {
                    b.Property<int>("IlaclarId")
                        .HasColumnType("int");

                    b.Property<int>("RecetelerId")
                        .HasColumnType("int");

                    b.HasKey("IlaclarId", "RecetelerId");

                    b.HasIndex("RecetelerId");

                    b.ToTable("IlacRecete");
                });

            modelBuilder.Entity("ReceteCodeFirst.Models.Doktor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brans")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DahiliNumara")
                        .HasColumnType("int");

                    b.Property<string>("DoktorAdSoyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HastaAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HastaSoyadi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IlacAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReceteHazirlanisTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Doktorlar");
                });

            modelBuilder.Entity("ReceteCodeFirst.Models.Ilac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DoktorAdSoyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HastaAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HastaSoyadi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IlacAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IlacTuru")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReceteHazirlanisTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Ilaclar");
                });

            modelBuilder.Entity("ReceteCodeFirst.Models.Recete", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DoktorAdSoyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DoktorId")
                        .HasColumnType("int");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HastaAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HastaSoyadi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IlacAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReceteHazirlanisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReceteIlaciId")
                        .HasColumnType("int");

                    b.Property<int>("Tutar")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DoktorId");

                    b.HasIndex("ReceteIlaciId");

                    b.ToTable("Receteler");
                });

            modelBuilder.Entity("ReceteCodeFirst.Models.ReceteIlaci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Adet")
                        .HasColumnType("int");

                    b.Property<string>("DoktorAdSoyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Doz")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HastaAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HastaSoyadi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IlacAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullanimSekli")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Periyot")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReceteHazirlanisTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ReceteIlaclari");
                });

            modelBuilder.Entity("ReceteCodeFirst.Models.Tani", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoktorAdSoyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HastaAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HastaSoyadi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IlacAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReceteHazirlanisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TedavisiVarMi")
                        .HasColumnType("bit");

                    b.Property<bool>("TeshisKonulduMu")
                        .HasColumnType("bit");

                    b.Property<bool>("TestlerYapildiMi")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Tanilar");
                });

            modelBuilder.Entity("ReceteTani", b =>
                {
                    b.Property<int>("RecetelerId")
                        .HasColumnType("int");

                    b.Property<int>("TanilarId")
                        .HasColumnType("int");

                    b.HasKey("RecetelerId", "TanilarId");

                    b.HasIndex("TanilarId");

                    b.ToTable("ReceteTani");
                });

            modelBuilder.Entity("IlacRecete", b =>
                {
                    b.HasOne("ReceteCodeFirst.Models.Ilac", null)
                        .WithMany()
                        .HasForeignKey("IlaclarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReceteCodeFirst.Models.Recete", null)
                        .WithMany()
                        .HasForeignKey("RecetelerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ReceteCodeFirst.Models.Recete", b =>
                {
                    b.HasOne("ReceteCodeFirst.Models.Doktor", "Doktor")
                        .WithMany("Receteler")
                        .HasForeignKey("DoktorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReceteCodeFirst.Models.ReceteIlaci", "ReceteIlaci")
                        .WithMany()
                        .HasForeignKey("ReceteIlaciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doktor");

                    b.Navigation("ReceteIlaci");
                });

            modelBuilder.Entity("ReceteTani", b =>
                {
                    b.HasOne("ReceteCodeFirst.Models.Recete", null)
                        .WithMany()
                        .HasForeignKey("RecetelerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReceteCodeFirst.Models.Tani", null)
                        .WithMany()
                        .HasForeignKey("TanilarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ReceteCodeFirst.Models.Doktor", b =>
                {
                    b.Navigation("Receteler");
                });
#pragma warning restore 612, 618
        }
    }
}
